<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ryanchapin.examples.hadoop.mapreduce.mrunit</groupId>
  <artifactId>mrunit-test-harness</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <description>
    Test harness for development and integration tests of the MRUnit project.
  </description>
  <name>MRUnit project test harness</name>
  <url>http://maven.apache.org</url>

  <licenses>
    <license>
      <name>The BSD 3-Clause License</name>
      <url>http://opensource.org/licenses/BSD-3-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>rchapin</id>
      <name>Ryan Chapin</name>
      <email>rchapin@nbinteractive.com</email>
      <url>http://www.ryanchapin.com</url>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>America/New_York</timezone>
      <properties>
        <picUrl>http://www.gravatar.com/516f2158d74d134faa9649e9180ef782</picUrl>
      </properties>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jdk.version>1.8</jdk.version>
    <maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>
    <maven.assembly.plugin.version>2.5.3</maven.assembly.plugin.version>
    <commons.codec.version>1.6</commons.codec.version>
    <commons.cli.version>1.2</commons.cli.version>
    <hadoop.version>2.6.0</hadoop.version>
    <slf4j.version>1.7.7</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <junit.version>4.11</junit.version>
    <hamcrest-core.version>1.3</hamcrest-core.version>
    <mockito.version>1.10.8</mockito.version>
    <powermock.version>1.6.1</powermock.version>
    <!--
    <mrunit.version>1.2.0-SNAPSHOT</mrunit.version>
    -->
    <mrunit.version>1.1.0</mrunit.version>
  </properties>

  <!-- Profiles to enable the proper separation of unit and integration tests.  Credit   -->
  <!-- goes to Petri Kainulainen for this approach.  Details of which can be found at:   -->
  <!-- http://www.petrikainulainen.net/programming/maven/integration-testing-with-maven/ -->
  <profiles>
     <!-- The Configuration of the development profile -->
     <profile>
        <id>dev</id>
        <activation>
          <activeByDefault>true</activeByDefault>
        </activation>
        <properties>
          <!--
             Specifies the build.profile.id property that must be equal to the name of
             the directory that contains the profile specific configuration file.
             Because the name of the directory that contains the configuration file of the
             development profile is dev, we must set the value of the build.profile.id
             property to dev.
          -->
          <build.profile.id>dev</build.profile.id>
          <!--
             Only unit tests are run when the development profile is active
          -->
          <skip.integration.tests>true</skip.integration.tests>
          <skip.unit.tests>false</skip.unit.tests>
        </properties>
     </profile>

     <!-- The Configuration of the integration-test profile -->
     <profile>
        <id>integration-test</id>
        <properties>
          <!--
             Specifies the build.profile.id property that must be equal to the name of
             the directory that contains the profile specific configuration file.
             Because the name of the directory that contains the configuration file of the
             integration-test profile is integration-test, we must set the value of the
             build.profile.id property to integration-test.
          -->
          <build.profile.id>integration-test</build.profile.id>
          <!--
             Only integration tests are run when the integration-test profile is active
          -->
          <skip.integration.tests>false</skip.integration.tests>
          <skip.unit.tests>true</skip.unit.tests>
        </properties>
     </profile>
  </profiles>


  <build>

    <filters>
        <!--
            Ensures that the config.properties file is always loaded from the
            configuration directory of the active Maven profile.â€¨
        -->
        <filter>profiles/${build.profile.id}/config.properties</filter>
    </filters>
    <resources>
        <!--
            Placeholders that are found from the files located in the configured resource
            directories are replaced with the property values found from the profile
            specific configuration file.
        -->
        <resource>
            <filtering>true</filtering>
            <directory>src/main/resources</directory>
        </resource>
    </resources>

    <plugins>

        <!-- Adds source and resource directories to our build -->
        <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>build-helper-maven-plugin</artifactId>
           <version>1.9.1</version>
           <executions>
              <!-- Add a new source directory to our build -->
              <execution>
                <id>add-integration-test-sources</id>
                <phase>generate-test-sources</phase>
                <goals>
                   <goal>add-test-source</goal>
                </goals>
                <configuration>
                   <!-- Configures the source directory of our integration tests -->
                   <sources>
                      <source>src/integration-test/java</source>
                   </sources>
                </configuration>
              </execution>
              <!-- Add a new resource directory to our build -->
              <execution>
                <id>add-integration-test-resources</id>
                <phase>generate-test-resources</phase>
                <goals>
                   <goal>add-test-resource</goal>
                </goals>
                <configuration>
                   <!-- Configures the resource directory of our integration tests -->
                   <resources>
                      <!--
                        Placeholders that are found from the files located in the configured resource
                        directories are replaced with the property values found from the profile
                        specific configuration file.
                      -->
                      <resource>
                        <filtering>true</filtering>
                        <directory>src/integration-test/resources</directory>
                      </resource>
                   </resources>
                </configuration>
              </execution>
           </executions>
        </plugin>
        <!-- Runs unit tests -->
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-surefire-plugin</artifactId>
           <version>2.18</version>
           <configuration>
              <!-- Skips unit tests if the value of skip.unit.tests property is true -->
              <skipTests>${skip.unit.tests}</skipTests>
              <!-- Excludes integration tests when unit tests are run -->
              <excludes>
                <exclude>**/IT*.java</exclude>
              </excludes>
           </configuration>
        </plugin>
        <!-- Runs integration tests -->
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-failsafe-plugin</artifactId>
           <version>2.18</version>
           <executions>
              <!--
                Invokes both the integration-test and the verify goals of the
                Failsafe Maven plugin
              -->
              <execution>
                <id>integration-tests</id>
                <goals>
                   <goal>integration-test</goal>
                   <goal>verify</goal>
                </goals>
                <configuration>
                   <!--
                      Skips integration tests if the value of skip.integration.tests
                      property is true
                   -->
                   <skipTests>${skip.integration.tests}</skipTests>
                </configuration>
              </execution>
           </executions>
        </plugin>

        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-compiler-plugin</artifactId>
           <version>3.2</version>
           <configuration>
              <source>${jdk.version}</source>
              <target>${jdk.version}</target>
              <encoding>${project.build.sourceEncoding}</encoding>
           </configuration>
        </plugin>
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-resources-plugin</artifactId>
           <version>2.7</version>
           <configuration>
              <encoding>${project.build.sourceEncoding}</encoding>
           </configuration>
        </plugin>

    </plugins>
    
  </build>

  <dependencies>

    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons.cli.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons.codec.version}</version>
    </dependency>

    <!-- Hadoop -->
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${hadoop.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Logging dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- Testing dependencies -->
    <dependency>
      <groupId>org.apache.mrunit</groupId>
      <artifactId>mrunit</artifactId>
      <version>${mrunit.version}</version>
      <classifier>hadoop2</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest-core.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-core</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
</project>
