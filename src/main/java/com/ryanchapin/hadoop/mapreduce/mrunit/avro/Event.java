/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.ryanchapin.hadoop.mapreduce.mrunit.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"com.ryanchapin.hadoop.mapreduce.mrunit.avro\",\"fields\":[{\"name\":\"uid\",\"type\":\"int\"},{\"name\":\"eventType\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"symbols\":[\"GET\",\"POST\",\"PUT\",\"LOGIN\",\"LOGOUT\"]}},{\"name\":\"timestamp\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int uid;
  @Deprecated public com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType eventType;
  @Deprecated public java.lang.CharSequence timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Event() {}

  /**
   * All-args constructor.
   */
  public Event(java.lang.Integer uid, com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType eventType, java.lang.CharSequence timestamp) {
    this.uid = uid;
    this.eventType = eventType;
    this.timestamp = timestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uid;
    case 1: return eventType;
    case 2: return timestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uid = (java.lang.Integer)value$; break;
    case 1: eventType = (com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType)value$; break;
    case 2: timestamp = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uid' field.
   */
  public java.lang.Integer getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(java.lang.Integer value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   */
  public com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /** Creates a new Event RecordBuilder */
  public static com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder newBuilder() {
    return new com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder();
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Builder */
  public static com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder newBuilder(com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder other) {
    return new com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder(other);
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Event instance */
  public static com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder newBuilder(com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event other) {
    return new com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder(other);
  }
  
  /**
   * RecordBuilder for Event instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private int uid;
    private com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType eventType;
    private java.lang.CharSequence timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uid)) {
        this.uid = data().deepCopy(fields()[0].schema(), other.uid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Event instance */
    private Builder(com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event other) {
            super(com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.SCHEMA$);
      if (isValidValue(fields()[0], other.uid)) {
        this.uid = data().deepCopy(fields()[0].schema(), other.uid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'uid' field */
    public java.lang.Integer getUid() {
      return uid;
    }
    
    /** Sets the value of the 'uid' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder setUid(int value) {
      validate(fields()[0], value);
      this.uid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'uid' field has been set */
    public boolean hasUid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'uid' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder clearUid() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'eventType' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType getEventType() {
      return eventType;
    }
    
    /** Sets the value of the 'eventType' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder setEventType(com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'eventType' field has been set */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'eventType' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.ryanchapin.hadoop.mapreduce.mrunit.avro.Event.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Event build() {
      try {
        Event record = new Event();
        record.uid = fieldSetFlags()[0] ? this.uid : (java.lang.Integer) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (com.ryanchapin.hadoop.mapreduce.mrunit.avro.EventType) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
